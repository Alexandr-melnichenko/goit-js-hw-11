{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export const BASE_URL = \"https://pixabay.com/\";\nexport const API_KEY = \"46035162-73af77dc9f391d36c3be30780\";","// Імпорт бібліотек\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport { API_KEY, BASE_URL } from \"./js/pixabay-api\";\n// import { showBox } from \"./js/render-functions\";\n// import { markup } from \"./js/render-functions\";\n\nconst searchInput = document.querySelector('.search-input');\nconst btnSubmit = document.querySelector('.btn');\nconst gallery = document.querySelector('.gallery');\n\n// Приймаємо значення з інпуту\nfunction inputSearchValue () {\n   let searchValue = searchInput.value;\n    return searchValue;\n    }\n\n\n// Колбек при натисканні кнопки + запит на сервер\nfunction onButtonSubmit (event) {\n    event.preventDefault();\n\n    // Оновлюю значення інпуту на момент натискання кнопки\nlet searchValue = inputSearchValue(); \nconsole.log (searchValue);\n\n   // Перевірка на пустий інпут    \nif (searchValue === \"\") {\n    iziToast.show({\n        message: `⚠️ Please fill search input`,\n        position: 'topCenter',\n        color: 'yellow',\n    })\nreturn\n}\n\n// Створюю обʼєкт з опціями запиту\nlet options = {\n    key: API_KEY,\n    q: searchValue,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: \"true\",\n};\n\n// Перетворюю обʼєкт в урл формат запиту\nconst params = new URLSearchParams(options).toString();\n  console.log(params); // Для проверки правильности параметров\n\n//   зачистка попередньої видачі\ngallery.innerHTML = \"\";  \n\n// Проміс фетч з запитом та методами обробки даних\nfetch(`${BASE_URL}api/?${params}`)\n.then((response) => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  })\n  .then((photos) => {\n    if(!photos.hits || photos.hits.length === 0) {\n        iziToast.show({\n            message: `\"Sorry, there are no images matching your search query. Please try again!\"`,\n            position: 'topCenter',\n            color: 'yellow',\n        })\n        return\n    }\nelse {\n    console.log(photos);\n\n    const markup = photos.hits.map((photo) => {\n        return `<li class=\"li-gallery\">\n      <div class=\"img-box\">\n    <a class=\"gallery-link\" href=\"${photo.largeImageURL}\">\n        <img\n          class=\"gallery-image\"\n          src=\"${photo.webformatURL}\"\n          alt=\"${photo.tags}\"\n          title=\"${photo.tags}\"/>\n      </a>\n      </div>\n      <div class=\"description-box\">\n        <div class=\"param-boxes\"><p class=\"parameters\">likes</p>\n        <p class=\"values\">${photo.likes}</p></div>\n        <div class=\"param-boxes\"><p class=\"parameters\">views</p>\n        <p class=\"values\">${photo.views}</p></div>\n        <div class=\"param-boxes\"><p class=\"parameters\">comments</p>\n        <p class=\"values\">${photo.comments}</p></div>\n        <div class=\"param-boxes\"><p class=\"parameters\">downloads</p>\n        <p class=\"values\">${photo.downloads}</p></div>\n      </div>\n      </li>`}).join(\"\");\n\n    gallery.insertAdjacentHTML(\"beforeend\", markup);\n    // Дані від бекенда\n          \n      }})\n  .catch((error) => console.log(error));  \n}\n\n\n let showBox = new SimpleLightbox('.img-box a', { \n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n    overlayOpacity: 0.7,\n    className: 'lightbox',\n   });\nshowBox.on('show.simplelightbox', function () {\n\t// Do something…\n});\n\nshowBox.on('error.simplelightbox', function (e) {\n\tconsole.log(e); // Some usefull information\n});\n\n// with jQuery nearly the same\n//  showBox = $('.img-box a').simpleLightbox();\n// showBox.on('show.simplelightbox', function () {\n// \t// Do something…\n// });\n\n\n\n\n// new SimpleLightbox('.img-box a', { \n//     captions: true,\n//     captionsData: 'alt',\n//     captionDelay: 250,\n//     overlayOpacity: 0.7,\n//     className: 'lightbox',\n//    });\n\n\n\n\nbtnSubmit.addEventListener('click', onButtonSubmit);\nsearchInput.addEventListener('input', inputSearchValue);\n"],"names":["BASE_URL","API_KEY","searchInput","btnSubmit","gallery","inputSearchValue","onButtonSubmit","event","searchValue","iziToast","options","params","response","photos","markup","photo","error","showBox","SimpleLightbox","e"],"mappings":"6vBAAO,MAAMA,EAAW,uBACXC,EAAU,qCCQjBC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAY,SAAS,cAAc,MAAM,EACzCC,EAAU,SAAS,cAAc,UAAU,EAGjD,SAASC,GAAoB,CAEzB,OADiBH,EAAY,KAE5B,CAIL,SAASI,EAAgBC,EAAO,CAC5BA,EAAM,eAAc,EAGxB,IAAIC,EAAcH,EAAgB,EAIlC,GAHA,QAAQ,IAAKG,CAAW,EAGpBA,IAAgB,GAAI,CACpBC,EAAS,KAAK,CACV,QAAS,8BACT,SAAU,YACV,MAAO,QACf,CAAK,EACL,MACA,CAGA,IAAIC,EAAU,CACV,IAAKT,EACL,EAAGO,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,EAGA,MAAMG,EAAS,IAAI,gBAAgBD,CAAO,EAAE,SAAQ,EAClD,QAAQ,IAAIC,CAAM,EAGpBP,EAAQ,UAAY,GAGpB,MAAM,GAAGJ,CAAQ,QAAQW,CAAM,EAAE,EAChC,KAAMC,GAAa,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,EACA,KAAMC,GAAW,CAChB,GAAG,CAACA,EAAO,MAAQA,EAAO,KAAK,SAAW,EAAG,CACzCJ,EAAS,KAAK,CACV,QAAS,6EACT,SAAU,YACV,MAAO,QACnB,CAAS,EACD,MACH,KACA,CACD,QAAQ,IAAII,CAAM,EAElB,MAAMC,EAASD,EAAO,KAAK,IAAKE,GACrB;AAAA;AAAA,oCAEqBA,EAAM,aAAa;AAAA;AAAA;AAAA,iBAGtCA,EAAM,YAAY;AAAA,iBAClBA,EAAM,IAAI;AAAA,mBACRA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKDA,EAAM,KAAK;AAAA;AAAA,4BAEXA,EAAM,KAAK;AAAA;AAAA,4BAEXA,EAAM,QAAQ;AAAA;AAAA,4BAEdA,EAAM,SAAS;AAAA;AAAA,YAE9B,EAAE,KAAK,EAAE,EAElBX,EAAQ,mBAAmB,YAAaU,CAAM,CAGlD,CAAO,CAAC,EACL,MAAOE,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACtC,CAGC,IAAIC,EAAU,IAAIC,EAAe,aAAc,CAC5C,SAAU,GACV,aAAc,MACd,aAAc,IACd,eAAgB,GAChB,UAAW,UACf,CAAI,EACJD,EAAQ,GAAG,sBAAuB,UAAY,CAE9C,CAAC,EAEDA,EAAQ,GAAG,uBAAwB,SAAUE,EAAG,CAC/C,QAAQ,IAAIA,CAAC,CACd,CAAC,EAsBDhB,EAAU,iBAAiB,QAASG,CAAc,EAClDJ,EAAY,iBAAiB,QAASG,CAAgB"}